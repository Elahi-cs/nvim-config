global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal

snippet template "Basic template" b
\documentclass[a4paper]{article}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{amsmath, amssymb}
\usepackage[${1:catalan|spanish|english}]{babel}

% figure support
\usepackage{import}
\usepackage{xifthen}
\pdfminorversion=7
\usepackage{pdfpages}
\usepackage{transparent}
\usepackage{tcolorbox}
\newcommand{\incfig}[1]{%
		\def\svgwidth{\columnwidth}
		\import{./figures/}{#1.pdf_tex}
}

\pdfsuppresswarningpagegroup=1

\author{Elahi Concha}

\begin{document}
	$0
\end{document}
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet => "implies" wAi
\implies
endsnippet

snippet =< "implied by" wAi
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
\] $0
endsnippet

snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

context "math()"
snippet sqrt "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

snippet RR "real" iA
\mathbb{R}
endsnippet

snippet QQ "Q" iA
\mathbb{Q}
endsnippet

snippet ZZ "Z" iA
\mathbb{Z}
endsnippet

snippet NN "n" iA
\mathbb{N}
endsnippet

context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

context "math()" 
snippet and "and" wA 
\wedge
endsnippet

context "math()"
snippet or "or" wA
\vee
endsnippet

context "math()"
snippet in "in" wA
\in
endsnippet

snippet bd "bold text" iA
\textbf{$1}$0
endsnippet

snippet -> "conditional" wA
\rightarrow
endsnippet

snippet <- "left arrow" wA
\leftarrow
endsnippet

snippet <_> "biconditional" wA
\leftrightarrow
endsnippet

context "math()"
snippet phi "phi" wA
\varphi
endsnippet

context "math()"
snippet psi "psi" wA
\psi
endsnippet

snippet brk "line break" wA
\\
endsnippet

context "math()"
snippet not "not" wA
\neg
endsnippet

context "math()"
snippet equiv "equivalent" wA
\equiv
endsnippet

context "math()"
snippet nequiv "equivalent" wA
\nequiv
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\} $0
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet sse "subseteq" wA
\subseteq
endsnippet

context "math()"
snippet UU "union" wA
\cup
endsnippet


context "math()"
snippet nU "intersection" wA
\cap
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet

snippet == "equals" iA
&= $1 \\\\
endsnippet

snippet != "equals" iA
\neq 
endsnippet

snippet ppp "text" iA
\par{$1}$0
endsnippet

snippet sss "subsubsection" iA
\subsubsection*{$1}$0
endsnippet

snippet tcbox "color box" bA
\begin{tcolorbox}
	${1:${VISUAL}}
\end{tcolorbox}
endsnippet

snippet exercise "exercise box" b
\begin{tcolorbox}
	\[
	\boldsymbol{$1}
	\]
	${0:${VISUAL}}
\end{tcolorbox}
endsnippet

context "math()"
snippet ali "aligned equation" bA
\begin{aligned}
	${1:${VISUAL}}
\end{aligned}
endsnippet

context "math()"
snippet mbd "math bold" iA 
\boldsymbol{$1}$0
endsnippet

context "math()"
snippet % "modulo operator" wA
\mathbin{\%}
endsnippet

context "math()"
snippet mlt "multiple circle" wA
\mathring{$1}$0
endsnippet

snippet sum "sum" w
\sum_{i=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

snippet OO "emptyset" iA
\varnothing
endsnippet

snippet nin "not in" iA
\notin
endsnippet
